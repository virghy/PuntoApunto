*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="bbmedia.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS mediabutton AS imgcanvas OF "..\..\..\..\..\sistemas\futura9\libs\gdiplusx.vcx" 
 	*< CLASSDATA: Baseclass="image" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: *getpath
		*p: caption		&& The caption of the button
		*p: fontname		&& The name of the button font
		*p: fontsize		&& Size of font
		*p: lhighlight
		*p: lmousedown
	*</DefinedPropArrayMethod>

	caption = My Media		&& The caption of the button
	fontname = Arial		&& The name of the button font
	fontsize = 16		&& Size of font
	Height = 256
	Name = "mediabutton"
	Picture = 24.png
	rendermode = 4
	Stretch = 2
	Width = 256
	_memberdata = <VFPData>
		<memberdata name="lhighlight" type="property" display="lHighlight"/>
		<memberdata name="lmousedown" type="property" display="lMousedown"/>
		<memberdata name="picture" type="Property" favorites="True"/>
		<memberdata name="caption" type="property" favorites="True" display="Caption"/>
		<memberdata name="fontname" type="property" display="FontName" favorites="True"/>
		<memberdata name="fontsize" type="property" display="FontSize" favorites="True"/>
		</VFPData>
	
	PROCEDURE beforedraw
		LOCAL logfx as xfcGraphics
		logfx = This.oGfx
		* you may need to change these 2 to suit the button size
		*nshadowOffset = 4
		*nbtnOffset = 15
		nshadowOffset = 4.5
		nbtnOffset = 10
		
		WITH _SCREEN.system.Drawing
			
			logfx.Clear(.Color.Transparent)
			loGfx.SmoothingMode = .Drawing2D.SmoothingMode.AntiAlias
			rect1 = .rectangle.new(0,0,This.Width - 1,This.Height-1)
			pen = .Pens.White	
			pathreg1 = This.GetPath(rect1, 20)
			
			* get region 2 path
			rect2 = rect1
			* reduce the rectangle size by 10
			rect2.inflate(-nbtnOffset,-nbtnOffset)
			pathreg2 = This.getpath(rect2,20)
			
			* create region with path1
			reg = .Region.new(pathreg1)
			* cut out the centre portion of shadow so we can see thru
			reg.xor(pathreg2)
			* now fill the part left over after the cut
			br2 = .Drawing2D.PathGradientBrush.new(pathreg1)
			br2.CenterColor = .Color.FromARGB(100,255,255,255)
			br2.SurroundColors =.Color.transparent
			br2.SetSigmaBellShape(.20,1)
			* draw shadow - this gives the Halo effect while still keeping centre of button transparent
			IF This.lHighlight
				loGfx.FillRegion(br2,reg)	
			ENDIF
			* get a rectangle for the top half button
			rect3 = .Rectangle.New(rect2.x,rect2.y,rect2.width, rect2.height/2 - 1)
			path3 = This.getpath(rect3,20,1)
			
			* white top half brush
			IF This.lMousedown
				brx = .Drawing2D.LinearGradientBrush.New(rect3,.Color.FromArgb(155,28,43,66),.Color.FromArgb(200,245,245,245),90,.T.)
			ELSE
				brx = .Drawing2D.LinearGradientBrush.New(rect3,.Color.FromArgb(200,245,245,245),.Color.FromArgb(155,28,43,66),90,.T.)
			ENDIF
			* draw top half
			logfx.FillPath(brx,path3)
			
			* draw white rect
			loGfx.DrawPath(pen,pathreg2)
			
			* Image semi transparent
			loBmp = .Bitmap.FromFile(This.Picture)
			xxx = -1*(1 - (230/255))
			rect4 = rect2
			rect4.Inflate(-10,-10)
			loMatrix = .Imaging.ColorMatrix.New( ;
				1, 0, 0, 0, 0, ;
				0, 1, 0, 0, 0, ;
				0, 0, 1, 0, 0, ;
				0, 0, 0, 1, 0, ;
				0, 0, 0, xxx, 1)
			loAttr = .Imaging.ImageAttributes.New()
			loAttr.SetColorMatrix(loMatrix)
			* draw image
			loGfx.DrawImage(loBmp,rect4,loBmp.GetBounds(),.GraphicsUnit.Pixel,loAttr)
			* text
			* Create a GraphicsPath object.
			Local loPath As xfcGraphicsPath
			loPath = .Drawing2D.GraphicsPath.New()
			
			* Get a basic string format object, then set properties
			loStringFormat = .StringFormat.new()
			loStringFormat.Alignment = .StringAlignment.Center
			loStringFormat.LineAlignment =.StringAlignment.Center
			tcText = This.Caption
			tcFont = This.Fontname
			tnFontSize = This.FontSize
			lnLeft = this.width/2
			lnTop = (This.Height/6) * nshadowOffset 
			*lnTop = (This.Height/2)
			* Add the string in the chosen style.
				loPath.AddString(tcText, ;
					.FontFamily.New(tcFont), ;
					.FontStyle.Bold, ;
					tnFontsize, ;
					.Point.New(lnLeft,lnTop),;
					loStringFormat)
			* draw the text
			loGfx.FillPath(.SolidBrush.New(.Color.White), loPath)
		ENDWITH
	ENDPROC

	PROCEDURE getpath
		LPARAMETERS rc,r,nCurvetype
		IF EMPTY(nCurvetype)
			nCurvetype = 0
		ENDIF
		* nCurvetype - 0 full curve, 1 top only, 2 bottom only
		LOCAL x,y,w,h,xpath,rx
		x = rc.X
		y = rc.Y
		w = rc.Width
		h = rc.Height
		rx = r
		ry=r
		DO case
		CASE nCurvetype = 1
			* top only
			rx = 1
		CASE nCurvetype = 2
			* bottom only
			ry = 1
		ENDCASE
		
		WITH _screen.system.Drawing
			xpath = .Drawing2D.GraphicsPath.New()
			xpath.AddArc(x, y, ry, ry, 180, 90)			&& Upper left corner
			xpath.AddArc(x+w - ry, y, ry, ry, 270, 90)		&&Upper right corner
			xpath.AddArc(x+w - rx, y+h - rx, rx, rx, 0, 90)	&&Lower right corner
			xpath.AddArc(x, y+h - rx, rx, rx, 90, 90)		&&Lower left corner
			xpath.CloseFigure()
		ENDWITH
		return xpath
	ENDPROC

	PROCEDURE MouseDown
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		IF nButton = 1
			This.lMousedown = .T.
			This.Draw()
		ENDIF
	ENDPROC

	PROCEDURE MouseEnter
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		This.Top = This.Top - 3
		This.lHighlight = .T.
		This.Draw()
	ENDPROC

	PROCEDURE MouseLeave
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		This.Top = This.Top + 3
		This.lHighlight = .F.
		This.Draw()
	ENDPROC

	PROCEDURE MouseUp
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		IF nButton = 1
			This.lMousedown = .F.
			This.Draw()
		ENDIF
	ENDPROC

ENDDEFINE
