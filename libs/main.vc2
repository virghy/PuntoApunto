*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="main.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS tastrade AS application OF "tsgen.vcx" 		&& Clase de la aplicación Tastrade
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\tastrade.h"
	*<DefinedPropArrayMethod>
		*m: *cargarpermisos
		*m: *getemployeeid		&& Devuelve el Id. del empleado que está registrado.
		*m: *getstartupaction		&& Obtiene la acción de inicio que se realizará cuando el usuario se registre por primera vez en el sistema.
		*m: *getuserlevel		&& Devuelve el nivel del usuario actual.
		*p: asentar
		*p: cemployeeid		&& Contiene el Id. del empleado que se ha registrado actualmente.
		*p: cerrado		&& Indica si el ejercicio está cerrado o no.
		*p: cuserlevel		&& El nivel del usuario que se ha registrado actualmente.
		*p: decimales		&& Cantidad de decimales a utilizar.
		*p: ejercicio
		*p: empresa		&& Indica la Empresa Registrada actualmente.
		*p: finalejercicio		&& Fecha del final de Ejercicio
		*p: inicioejercicio		&& Fecha inicio del Ejercicio
		*p: monedabase		&& Indica la Moneda Base de la Empresa para las transacciones.
		*p: nombreempresa
		*p: nombreusuario
		*p: periodo		&& Indica el Periodo o el nro. del mes activo actualmente, 13= Ninguno
		*p: producto_decimal
		*p: proyecto
		*p: sistema		&& Contiene el nombre del sistema activo.
		*p: sucursal		&& el codigo de sucursal al cual corresponde el usuario
		*p: sysmenu		&& Contiene el nombre del sistema actualmente activo.
		*a: ^arraypermisos[1,6]
	*</DefinedPropArrayMethod>

	PROTECTED cemployeeid,cuserlevel,ainstances,cmainwindcaption
	cdatabase = data\datos
	cemployeeid = 		&& Contiene el Id. del empleado que se ha registrado actualmente.
	cmainmenu = principal.mpr
	cuserlevel = 		&& El nivel del usuario que se ha registrado actualmente.
	empresa = 		&& Indica la Empresa Registrada actualmente.
	Height = 31
	Name = "tastrade"
	nombreempresa = 
	nromenu = 500
	odbc = DRIVER=SQL Server;SERVER=PC_2;UID=vgo;APP=Futura Software;DATABASE=FUTURAFOX;LANGUAGE=Español;Trusted_Connection=Yes
	proyecto = 
	sistema = 		&& Contiene el nombre del sistema activo.
	sysmenu = 		&& Contiene el nombre del sistema actualmente activo.
	Width = 81
	
	PROCEDURE cargarpermisos
		= SQL("Exec permiso_usuario '"+THIS.CEMPLOYEEID+"', ?oApp.Sistema", 'lcPermisos')
		SELECT LCPERMISOS
		IF RECCOUNT('lcPermisos')>0
		DIMENSION THIS.ARRAYPERMISOS(RECCOUNT('lcPermisos'), 6)
		COPY TO ARRAY THIS.ARRAYPERMISOS
		ENDIF
		USE IN LCPERMISOS
	ENDPROC

	PROCEDURE do
		LOCAL LCACTION
		_SCREEN.WINDOWSTATE = 2
		DO (THIS.CMAINMENU)
		THIS.DOSYS(THIS.SISTEMA)
		IF  .NOT. .F.
		LCACTION = ''
		IF  .NOT. EMPTY(LCACTION)
		&LCACTION
		ENDIF
		ENDIF
		DO WHILE .T.
		READ EVENTS
		_SCREEN.HIDE()
		IF THIS.CLEANUP()
		THIS.CLEANUP2
		EXIT
		ENDIF
		ENDDO
	ENDPROC

	PROCEDURE getemployeeid		&& Devuelve el Id. del empleado que está registrado.
		RETURN THIS.CEMPLOYEEID
	ENDPROC

	PROTECTED PROCEDURE getstartupaction		&& Obtiene la acción de inicio que se realizará cuando el usuario se registre por primera vez en el sistema.
		LOCAL LNOLDAREA, LCACTION, LLCLOSEWHENDONE, NOMBREUSUARIO
		LNOLDAREA = SELECT()
		IF  .NOT. USED("user_level")
		USE user_level IN 0
		LLCLOSEWHENDONE = .T.
		ENDIF
		SELECT USER_LEVEL
		LCACTION = LOOKUP(STARTUP_ACTION, UPPER(THIS.CUSERLEVEL), DESCRIPTION, "DESCRIPTIO")
		IF LLCLOSEWHENDONE
		USE IN USER_LEVEL
		ENDIF
		SELECT (LNOLDAREA)
		RETURN LCACTION
	ENDPROC

	PROCEDURE getuserlevel		&& Devuelve el nivel del usuario actual.
		RETURN THIS.CUSERLEVEL
	ENDPROC

	PROCEDURE Init
		LOCAL LLRETVAL, LNRETVAL, LCUSERLEVEL, LCBUFFER, LLSHOWINTRO, LCLOGINSTRING
		THIS.CMAINWINDCAPTION = "Futura Software"
		IF  .NOT. FILE(ALLTRIM(THIS.CDATABASE)+".dbc")
		THIS.CDATABASE = 'datos.dbc'
		ENDIF
		LLRETVAL = APPLICATION::INIT()
		IF LLRETVAL
		LCBUFFER = " "+CHR(0)
		LLSHOWINTRO = .T.
		IF GETPRIVSTR("Defaults", "ShowIntroForm", "", @LCBUFFER, LEN(LCBUFFER), CURDIR()+"FUTURA.INI")>0
		LLSHOWINTRO = (VAL(LCBUFFER)=1)
		ENDIF
		THIS.DOFORM("intro")
		LNRETVAL = 1
		DO CASE
		CASE LNRETVAL=1
		IF  .NOT. .F.
		IF EMPTY(GCSISTEMA)
		LLRETVAL = THIS.LOGIN()
		ENDIF
		ELSE
		THIS.CEMPLOYEEID = ""
		THIS.CUSERLEVEL = "PROGRAMADOR DE APLICACIONES"
		ENDIF
		CASE LNRETVAL=2
		LLRETVAL = .F.
		ENDCASE
		ENDIF
		IF  .NOT. LLRETVAL
		IF THIS.CLEANUP()
		THIS.CLEANUP2
		ENDIF
		ENDIF
		RETURN LLRETVAL
	ENDPROC

	PROCEDURE login
		LOCAL LCEMPLOYEEID, LCUSERLEVEL, LCCLOSWHENDONE, NOMBREUSUARIO, LCEMPRESA, LNDECIMALES, LCSISTEMA, LCIDSISTEMA
		LCEMPLOYEEID = THIS.CEMPLOYEEID
		LCUSERLEVEL = THIS.CUSERLEVEL
		LCEMPRESA = THIS.EMPRESA
		LNDECIMALES = THIS.DECIMALES
		LCSISTEMA = THIS.SISTEMA
		IF TYPE('oApp')='O'
			LCLOGINSTRING = THIS.DOFORMRETVAL("loginOnLine")
		ELSE
			LCLOGINSTRING = THIS.DOFORMRETVAL("loginpicture")
		ENDIF
		LCIDSISTEMA = ''
		IF  .NOT. EMPTY(LCLOGINSTRING)
			THIS.CEMPLOYEEID = LEFT(LCLOGINSTRING, AT(",", LCLOGINSTRING)-1)
			THIS.EMPRESA = SUBSTR(LCLOGINSTRING, AT(",", LCLOGINSTRING, 1)+1, 3)
			THIS.SISTEMA = SUBSTR(LCLOGINSTRING, AT(",", LCLOGINSTRING, 2)+1, 3)
			THIS.PERIODOTRABAJO = VAL(SUBSTR(LCLOGINSTRING, AT(",", LCLOGINSTRING, 3)+1))
			SQL("Select Group_Id from Usuarios where Employee_ID='"+ALLTRIM(THIS.CEMPLOYEEID)+"'", 'cGrupo')
			IF RECCOUNT('cGrupo')>0
				THIS.CUSERLEVEL = CGRUPO.GROUP_ID
			ENDIF
		ELSE
			THIS.CEMPLOYEEID = LCEMPLOYEEID
			THIS.CUSERLEVEL = LCUSERLEVEL
			THIS.EMPRESA = LCEMPRESA
			THIS.SISTEMA = LCSISTEMA
			RETURN  .NOT. EMPTY(THIS.CEMPLOYEEID)
		ENDIF
		RELEASE LCLOGINSTRING
		IF  .NOT. USED("usuarios")
			USE usuarios IN 0
			LLCLOSEWHENDONE = .T.
		ENDIF
		SELECT usuarios
		THIS.NOMBREUSUARIO = LOOKUP(FIRST_NAME, UPPER(THIS.CEMPLOYEEID), EMPLOYEE_ID)
		SET DATABASE TO DATOS
		SET TEXTMERGE ON
		TEXT TO CMDSQL NOSHOW
		
			Select empresa,inicio, final,decimales,empresa.ejercicio, cerrado,periodo,
			         producto_Decimal,asiento_aut,"MONEDA_BASE"	,
			         CONVERT(CHAR(10),dbo.leerConstante('<<this.empresa>>' , 'SYS_MONEDA_BASE')) AS Moneda,
				 CONVERT(char(2),dbo.leerConstante('<<this.empresa>>' , 'SYS_SUCURSAL_BASE')) AS Sucursal,
				 CONVERT(char(2),dbo.leerConstante('<<this.empresa>>' , 'SYS_PROYECTO')) AS Proyecto
			 from empresa, ejercicios
			where empresa.idEmpresa= '<<this.empresa>>'
			and empresa.idempresa = ejercicios.idempresa
			and empresa.ejercicio = ejercicios.ejercicio
		
		ENDTEXT
		SET TEXTMERGE OFF
		IF SQL(CMDSQL, 'xEmpresa')>0
			THIS.NOMBREEMPRESA = XEMPRESA.EMPRESA
			THIS.INICIOEJERCICIO = CTOD(DTOC(XEMPRESA.INICIO))
			THIS.FINALEJERCICIO = CTOD(DTOC(XEMPRESA.FINAL))
			THIS.DECIMALES = NVL(XEMPRESA.DECIMALES,0)
			THIS.EJERCICIO = XEMPRESA.EJERCICIO
			THIS.PERIODO = XEMPRESA.PERIODO
			THIS.CERRADO = XEMPRESA.CERRADO
			THIS.ASENTAR = XEMPRESA.ASIENTO_AUT .AND. THIS.CUSERLEVEL='1'
			THIS.PRODUCTO_DECIMAL = NVL(XEMPRESA.PRODUCTO_DECIMAL,0)
			THIS.MONEDABASE = NVL(XEMPRESA.MONEDA,'GS')
			THIS.SUCURSAL = XEMPRESA.SUCURSAL
			THIS.PROyecto=XEMPRESA.PROYECTO
			USE IN XEMPRESA
		ELSE
			THIS.NOMBREEMPRESA = 'Empresa Ejemplo'
		ENDIF
		
		IF NOT EMPTY(NVL(usuarios.SUCURSAL,''))
			THIS.SUCURSAL = usuarios.SUCURSAL
		ENDIF
		
		
		IF LLCLOSEWHENDONE
			USE IN usuarios
		ENDIF
		
		
		*THIS.AddObject("Config","AppConfig")
		
		RETURN  .NOT. EMPTY(THIS.CEMPLOYEEID)
		
		
		***********************************
		
		
		LOCAL LCEMPLOYEEID, LCUSERLEVEL, LCCLOSWHENDONE, NOMBREUSUARIO, LCEMPRESA, LNDECIMALES, LCSISTEMA, LCIDSISTEMA
		LCEMPLOYEEID = THIS.CEMPLOYEEID
		LCUSERLEVEL = THIS.CUSERLEVEL
		LCEMPRESA = THIS.EMPRESA
		LNDECIMALES = THIS.DECIMALES
		LCSISTEMA = THIS.SISTEMA
		IF TYPE('oApp')='O'
			LCLOGINSTRING = THIS.DOFORMRETVAL("loginOnLine")
		ELSE
			LCLOGINSTRING = THIS.DOFORMRETVAL("loginpicture")
		ENDIF
		LCIDSISTEMA = ''
		IF  .NOT. EMPTY(LCLOGINSTRING)
			THIS.CEMPLOYEEID = LEFT(LCLOGINSTRING, AT(",", LCLOGINSTRING)-1)
			THIS.EMPRESA = SUBSTR(LCLOGINSTRING, AT(",", LCLOGINSTRING, 1)+1, 3)
			THIS.SISTEMA = SUBSTR(LCLOGINSTRING, AT(",", LCLOGINSTRING, 2)+1)
			SQL("Select Group_Id from Usuarios where Employee_ID='"+ALLTRIM(THIS.CEMPLOYEEID)+"'", 'cGrupo')
			IF RECCOUNT('cGrupo')>0
				THIS.CUSERLEVEL = CGRUPO.GROUP_ID
			ENDIF
		ELSE
			THIS.CEMPLOYEEID = LCEMPLOYEEID
			THIS.CUSERLEVEL = LCUSERLEVEL
			THIS.EMPRESA = LCEMPRESA
			THIS.SISTEMA = LCSISTEMA
			RETURN  .NOT. EMPTY(THIS.CEMPLOYEEID)
		ENDIF
		RELEASE LCLOGINSTRING
		IF  .NOT. USED("usuarios")
			USE usuarios IN 0
			LLCLOSEWHENDONE = .T.
		ENDIF
		SELECT usuarios
		THIS.NOMBREUSUARIO = LOOKUP(FIRST_NAME, UPPER(THIS.CEMPLOYEEID), EMPLOYEE_ID)
		SET DATABASE TO DATOS
		CMDSQL = "Exec sys_LeerConfig '"+THIS.EMPRESA+"'"
		SET STEP ON
		IF SQL(CMDSQL, 'xEmpresa')>0
			THIS.NOMBREEMPRESA = XEMPRESA.EMPRESA
			THIS.INICIOEJERCICIO = CTOD(DTOC(XEMPRESA.INICIO))
			THIS.FINALEJERCICIO = CTOD(DTOC(XEMPRESA.FINAL))
			THIS.DECIMALES = XEMPRESA.DECIMALES
			THIS.EJERCICIO = XEMPRESA.EJERCICIO
			THIS.CERRADO = XEMPRESA.CERRADO
			THIS.ASENTAR = XEMPRESA.ASIENTO_AUT .AND. THIS.CUSERLEVEL='1'
			THIS.PRODUCTO_DECIMAL = XEMPRESA.PRODUCTO_DECIMAL
			THIS.MONEDABASE = XEMPRESA.MONEDA
			THIS.SUCURSAL = XEMPRESA.SUCURSAL
			USE IN XEMPRESA
		ELSE
			THIS.NOMBREEMPRESA = 'Empresa Ejemplo'
		ENDIF
		
		THIS.SUCURSAL = usuarios.SUCURSAL
		
		IF LLCLOSEWHENDONE
			USE IN usuarios
		ENDIF
		RETURN  .NOT. EMPTY(THIS.CEMPLOYEEID)
	ENDPROC

	PROCEDURE permisos
		PARAMETER LCIDOBJETO
		LOCAL LNPOSICION
		LNPOSICION = ASCAN(THIS.ARRAYPERMISOS, LCIDOBJETO)
		IF LNPOSICION>0
		RETURN THIS.ARRAYPERMISOS(LNPOSICION+1)
		ELSE
		RETURN .F.
		ENDIF
	ENDPROC

ENDDEFINE
